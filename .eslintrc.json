{
  "root": true,
  "env": {
    "browser": true,
    "node": true,
    "es2017": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.eslint.json"
  },
  "plugins": ["@typescript-eslint"],
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended", "prettier"],
  "ignorePatterns": ["node_modules/", "dist/", "coverage/", "docs/"],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "String": {
            "message": "Use string instead",
            "fixWith": "string"
          },
          "Boolean": {
            "message": "Use boolean instead",
            "fixWith": "boolean"
          },
          "Number": {
            "message": "Use number instead",
            "fixWith": "number"
          },
          "Symbol": {
            "message": "Use symbol instead",
            "fixWith": "symbol"
          },
          "Function": {
            "message": "The `Function` type accepts any function-like value."
          },
          // object typing
          "Object": {
            "message": "The `Object` type actually means \"any non-nullish value\", so it is marginally better than `unknown`."
          },
          "{}": {
            "message": "`{}` actually means \"any non-nullish value\"."
          }
        }
      }
    ],
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/require-await": "error",
    "prefer-exponentiation-operator": "error",
    "prefer-object-spread": "error",
    "prefer-rest-params": "error",
    "prefer-template": "error",
    "camelcase": "error",
    "no-debugger": "warn",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-explicit-any": "off"
  },
  "overrides": [
    {
      "files": ["*.test.ts"],
      "rules": {
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    }
  ]
}
